# Generated by Django 4.1.9 on 2023-05-24 11:14

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import utilities.json


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('extras', '0092_delete_jobresult'),
        ('dcim', '0172_larger_power_draw_values'),
    ]

    operations = [
        migrations.CreateModel(
            name='TransceiverTypeProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('choice', models.CharField(max_length=154, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TransceiverType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('model', models.CharField(max_length=100)),
                ('part_number', models.CharField(blank=True, max_length=50)),
                ('physic', models.CharField(blank=True, max_length=50)),
                ('form', models.CharField(blank=True, max_length=50)),
                ('tx_power_min', models.DecimalField(blank=True, decimal_places=1, max_digits=2)),
                ('tx_power_max', models.DecimalField(blank=True, decimal_places=1, max_digits=2)),
                ('rx_power_min', models.DecimalField(blank=True, decimal_places=1, max_digits=2)),
                ('rx_power_max', models.DecimalField(blank=True, decimal_places=1, max_digits=2)),
                ('comments', models.TextField(blank=True)),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transceiver_types', to='dcim.manufacturer')),
                ('profile', models.ManyToManyField(blank=True, to='netbox_transceiver.transceivertypeprofile')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
            ],
            options={
                'ordering': ('manufacturer', 'model'),
            },
        ),
        migrations.CreateModel(
            name='Transceiver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('custom_field_data', models.JSONField(blank=True, default=dict, encoder=utilities.json.CustomFieldJSONEncoder)),
                ('status', models.CharField(default='planned', max_length=50)),
                ('serial', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=150)),
                ('asset_tag', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transceivers', to='dcim.device')),
                ('interface', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transceivers', to='dcim.interface')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transceivers', to='dcim.module')),
                ('tags', taggit.managers.TaggableManager(through='extras.TaggedItem', to='extras.Tag')),
                ('transceiver_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='instances', to='netbox_transceiver.transceivertype')),
            ],
            options={
                'verbose_name': 'Transceiver',
                'verbose_name_plural': 'Transceivers',
                'ordering': ('interface',),
            },
        ),
        migrations.AddConstraint(
            model_name='transceivertype',
            constraint=models.UniqueConstraint(fields=('manufacturer', 'model'), name='netbox_transceiver_transceivertype_unique_manufacturer_model'),
        ),
    ]
